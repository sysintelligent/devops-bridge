# Production values for DevOps Bridge
# This file contains recommended settings for production deployment

replicaCount: 3

image:
  repository: sysintelligent/devops-bridge
  pullPolicy: Always
  tag: "v1.0.0"

serviceAccount:
  create: true
  annotations: {}

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  httpPort: 8080
  grpcPort: 9090

ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: devops-bridge.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: devops-bridge-tls
      hosts:
        - devops-bridge.example.com

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - devops-bridge
          topologyKey: kubernetes.io/hostname

# Configuration for the DevOps Bridge server
config:
  # Log level for the application
  logLevel: "info"
  
  # Authentication settings
  auth:
    # Production tokens (should be replaced with secure tokens)
    demoUserToken: "prod-user-token-$(openssl rand -hex 16)"
    demoAdminToken: "prod-admin-token-$(openssl rand -hex 32)"
  
  # Kubernetes client configuration
  kubernetes:
    # In-cluster configuration (default: true)
    inCluster: true
    # Kubeconfig path (used when inCluster is false)
    kubeconfig: ""
  
  # Server configuration
  server:
    # HTTP server configuration
    http:
      port: 8080
      timeout: 30s
    # gRPC server configuration
    grpc:
      port: 9090
      timeout: 30s

# Persistence configuration (if needed for future features)
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi

# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
  prometheus:
    enabled: true
    path: /metrics 